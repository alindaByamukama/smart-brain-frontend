{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","brain","paddingTop","ImageLinkForm","onInputChange","onBtnSubmit","type","onChange","onClick","Rank","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","value","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","particlesInit","main","loadFull","particlesLoaded","container","init","loaded","options","background","color","particles","links","distance","enable","triangles","opacity","move","speed","size","shape","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.653de5b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav style={{display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport './FaceRecognition.css'\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma' >\r\n            <div className='absolute mt2'>\r\n            <img id='inputImage' src={imageUrl} alt='' style={{width:'500px', height:'auto'}} />\r\n            <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition","export default __webpack_public_path__ + \"static/media/brain.596fd175.png\";","import React from \"react\";\r\nimport Tilt from 'react-parallax-tilt'\r\nimport brain from './brain.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n\r\n            <Tilt className=\"Tilt br2 shadow-2\" style={{ width: '150px', height: '150px'}}>\r\n                <div className=\"pa3\">\r\n                     <img src={brain} style={{paddingTop: '5px', width: '100px'}} alt='logo'/>\r\n                </div>\r\n            </Tilt>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from \"react\";\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onBtnSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {'This Smart Brain will detect faces in your pictures, Give it  a try!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input className=\"f4 pa2 w-70 center\" type='text' onChange={onInputChange} />\r\n                    <button \r\n                    className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-green\"\r\n                    onClick={onBtnSubmit}\r\n                        >Detect\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"white f1\">\r\n                { 'Susan, your current rank is...' }\r\n            </div>\r\n            <div className=\"white f1\">\r\n                { '#5' }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank","import React, { Component } from 'react'\nimport Particles from 'react-tsparticles'\nimport { loadFull } from \"tsparticles\"\nimport Clarifai from 'clarifai'\nimport Navigation from './components/Navigation/Navigation'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport 'tachyons'\nimport './App.css'\n\nconst app = new Clarifai.App({\n  apiKey: 'fc4c8606d6764cc19fb5b8455675353b'\n });\n\nclass App extends Component {\n  constructor() {\n    super() \n      this.state = {\n        input: '',\n        imageUrl: '',\n        box: {},\n      }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onBtnSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n      app.models\n        .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log('ALERT', err))\n  }\n\n  render() {\n    const particlesInit = async (main) => {\n      // console.log(main);\n      await loadFull(main);\n    }\n\n    const particlesLoaded = async (container) => {\n      // console.log(container);\n      await container\n    }\n\n    const particlesOptions = {\n      background: {\n      color: \"none\",\n      },\n      particles: {\n          links: {\n              distance: 125,\n              enable: true,\n              triangles: {\n                  enable: true,\n                  opacity: 0.05,\n              },\n          },\n          move: {\n              enable: true,\n              speed: 1,\n          },\n          size: {\n              value: 1,\n          },\n          shape: {\n              type: \"circle\",\n          },\n      }\n    }\n    \n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={particlesOptions}\n        />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onBtnSubmit={this.onBtnSubmit} />\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> \n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
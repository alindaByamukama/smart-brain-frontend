{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","brain","paddingTop","ImageLinkForm","onInputChange","onBtnSubmit","type","onChange","Rank","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesInit","main","loadFull","particlesLoaded","container","particlesOptions","background","color","particles","links","distance","enable","triangles","opacity","move","speed","size","shape","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","init","loaded","options","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cf2b0d6e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n        )\r\n    } else {\r\n        return (\r\n        <nav style={{display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n            <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport './FaceRecognition.css'\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma' >\r\n            <div className='absolute mt2'>\r\n            <img id='inputImage' src={imageUrl} alt='' style={{width:'500px', height:'auto'}} />\r\n            <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition","export default __webpack_public_path__ + \"static/media/brain.596fd175.png\";","import React from \"react\";\r\nimport Tilt from 'react-parallax-tilt'\r\nimport brain from './brain.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n\r\n            <Tilt className=\"Tilt br2 shadow-2\" style={{ width: '150px', height: '150px'}}>\r\n                <div className=\"pa3\">\r\n                     <img src={brain} style={{paddingTop: '5px', width: '100px'}} alt='logo'/>\r\n                </div>\r\n            </Tilt>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from \"react\";\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onBtnSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {'This Smart Brain will detect faces in your pictures, Give it  a try!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input className=\"f4 pa2 w-70 center\" type='text' onChange={onInputChange} />\r\n                    <button \r\n                    className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-green\"\r\n                    onClick={onBtnSubmit}\r\n                        >Detect\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"white f1\">\r\n                { 'Susan, your current rank is...' }\r\n            </div>\r\n            <div className=\"white f1\">\r\n                { '#5' }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank","import React from 'react'\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                    <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n            </div>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SignIn","import React from 'react'\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                </div>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                    <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                </div>\r\n            </div>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\nimport Particles from 'react-tsparticles'\nimport { loadFull } from \"tsparticles\"\nimport Clarifai from 'clarifai'\nimport Navigation from './components/Navigation/Navigation'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport 'tachyons'\nimport './App.css'\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\n\nconst app = new Clarifai.App({\n  apiKey: 'fc4c8606d6764cc19fb5b8455675353b'\n });\n\nconst particlesInit = async (main) => {\n  // console.log(main);\n  await loadFull(main);\n}\n\nconst particlesLoaded = async (container) => {\n  // console.log(container);\n  await container\n}\n\nconst particlesOptions = {\n  background: {\n  color: \"none\",\n  },\n  particles: {\n      links: {\n          distance: 125,\n          enable: true,\n          triangles: {\n              enable: true,\n              opacity: 0.05,\n          },\n      },\n      move: {\n          enable: true,\n          speed: 1,\n      },\n      size: {\n          value: 1,\n      },\n      shape: {\n          type: \"circle\",\n      },\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super() \n      this.state = {\n        input: '',\n        imageUrl: '',\n        box: {},\n        route: 'signin',\n        isSignedIn: false\n      }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onBtnSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n      app.models\n        .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log('ALERT', err))\n  } \n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n          { route === 'home' ? \n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onBtnSubmit={this.onBtnSubmit} />\n            <FaceRecognition box={box} imageUrl={imageUrl} /> \n          </div>\n          : (\n            this.state.route === 'signin' \n            ? < SignIn onRouteChange={this.onRouteChange}/>\n            : < Register onRouteChange={this.onRouteChange}/>\n            )\n          }\n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}